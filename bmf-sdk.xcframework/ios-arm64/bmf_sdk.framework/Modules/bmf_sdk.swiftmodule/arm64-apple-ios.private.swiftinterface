// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios18.1 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name bmf_sdk
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum BmfSdkAsset : Swift.Sendable {
  public enum Assets {
    public static let accentColor: bmf_sdk.BmfSdkColors
  }
  public enum PreviewAssets {
  }
}
@_hasMissingDesignatedInitializers final public class BmfSdkColors : Swift.Sendable {
  final public let name: Swift.String
  public typealias Color = UIKit.UIColor
  @available(iOS 11.0, tvOS 11.0, watchOS 4.0, macOS 10.13, visionOS 1.0, *)
  final public var color: bmf_sdk.BmfSdkColors.Color {
    get
  }
  @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, visionOS 1.0, *)
  final public var swiftUIColor: SwiftUICore.Color {
    get
  }
  @objc deinit
}
extension UIKit.UIColor {
  @available(iOS 11.0, tvOS 11.0, watchOS 4.0, macOS 10.13, visionOS 1.0, *)
  convenience public init?(asset: bmf_sdk.BmfSdkColors)
}
@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, visionOS 1.0, *)
extension SwiftUICore.Color {
  public init(asset: bmf_sdk.BmfSdkColors)
}
@_inheritsConvenienceInitializers @objc public class BmfSdkResources : ObjectiveC.NSObject {
  @objc public class var bundle: Foundation.Bundle {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
